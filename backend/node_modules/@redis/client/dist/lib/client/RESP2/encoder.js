"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const CRLF = '\r\n';
function encodeCommand(args) {
    const toWrite = [];
<<<<<<< HEAD
    let strings = `*${args.length}${CRLF}`;
    for (let i = 0; i < args.length; i++) {
        const arg = args[i];
        if (typeof arg === 'string') {
            const byteLength = Buffer.byteLength(arg);
            strings += `$${byteLength}${CRLF}`;
            strings += arg;
        }
        else if (arg instanceof Buffer) {
            toWrite.push(`${strings}$${arg.length}${CRLF}`);
            strings = '';
            toWrite.push(arg);
=======
    let strings = '*' + args.length + CRLF;
    for (let i = 0; i < args.length; i++) {
        const arg = args[i];
        if (typeof arg === 'string') {
            strings += '$' + Buffer.byteLength(arg) + CRLF + arg + CRLF;
        }
        else if (arg instanceof Buffer) {
            toWrite.push(strings + '$' + arg.length.toString() + CRLF, arg);
            strings = CRLF;
>>>>>>> 2c724ed7125198bd9f0f1d9dd9b3c050a2e864c1
        }
        else {
            throw new TypeError('Invalid argument type');
        }
<<<<<<< HEAD
        strings += CRLF;
=======
>>>>>>> 2c724ed7125198bd9f0f1d9dd9b3c050a2e864c1
    }
    toWrite.push(strings);
    return toWrite;
}
exports.default = encodeCommand;
